Менеджер контекста - объект реализующий механизм, который позволяет гарантировать выполнение завершающих действий не зависимо
от поднятия исключения в блоке кода.

Самый распространенный пример использования менеджера контекста - выражение with. 
К примеру при чтении файла мы можем быть уверены, что файл будет закрыт после выполнения кода в теле with:

with open('some_file', 'w') as opened_file:
    opened_file.write('Helo World!')

В данном примере, файл открывается, в него записываются данные, после чего файл закрывается.
Даже если в ходе выполнения кода в теле with возникнет ошибка, менеджер контекста попробует закрыть файл.
Эквивалентная запись без менеджера контекста:

file = open('some_file', 'w')
try:
    file.write('Hello World!')
finally:
    file.close()

Любой объект может выступать менеджером контекста в случае если в нем реализованы(переопределены) методы __enter__ и __exit__.
Метод __enter__ инициализирует контекст(к примеру открывает файл). Значение возвращаемое методом записывается по имени указанному после оператора as.
Метод __exit__ вызывается после выполнения тела оператора with и принимает три аргумента: тип исключения, само исключение, объект типа traceback.
Если во время исполнения тела оператора with біло поднято исключение - метод __exit__ может подавить его вернув True.
